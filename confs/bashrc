#!/bin/bash

# bin
if [ -e ~/bin ]
then
    export PATH=~/bin:$PATH
fi

# pyenv
if [ -e ~/.pyenv ]
then
    export PYENV_ROOT="$HOME/.pyenv"
    export PATH="$PYENV_ROOT/bin:$PATH"
    eval "$(pyenv init -)"
fi

# Android SDK NDK
ANDROID_PATH=/Users/zyj/Library/Android
ANDROID_SDK_PATH=$ANDROID_PATH/sdk
ANDROID_NDK_PATH=$ANDROID_PATH/sdk/ndk-bundle
if [ -e $ANDROID_SDK_PATH ]
then
    export ANDROID_HOME=$ANDROID_SDK_PATH
    export PATH="$ANDROID_SDK_PATH/tools:$PATH"
    export PATH="$ANDROID_SDK_PATH/platform-tools:$PATH"
fi

if [ -e $ANDROID_NDK_PATH ]
then
    export PATH="$ANDROID_NDK_PATH:$PATH"
fi

# workspace
WORKSPACE_IMAGE_PATH=$HOME/.workspace.dmg.sparseimage
WORKSPACE_MOUNT_PATH=$HOME/workspace
if [ -f $WORKSPACE_IMAGE_PATH ]
then
    function mountworkspace {
        hdiutil attach $WORKSPACE_IMAGE_PATH -mountpoint $WORKSPACE_MOUNT_PATH;
    }

    function umountworkspace {
        hdiutil detach $WORKSPACE_MOUNT_PATH
    }
fi

# Nas NFS
NAS_IP_ADDRESS=192.168.1.99
NAS_MOUNT_PATH=$HOME/nas
function mountnas {
    if [ -e $NAS_MOUNT_PATH ]
    then
        echo 'Nas already mounted'
        return
    fi
    mkdir $NAS_MOUNT_PATH
    sudo mount -t nfs -o resvport,rw $NAS_IP_ADDRESS:/volume1/storage $NAS_MOUNT_PATH
}

function umountnas {
    if [ -e $NAS_MOUNT_PATH ]
    then
        sudo umount $NAS_MOUNT_PATH
    fi
    rmdir $NAS_MOUNT_PATH
}

# Router NFS
ROUTER_IP_ADDRESS=192.168.1.1
ROUTER_MOUNT_PATH=$HOME/router
function mountrouter {
    if [ -e $ROUTER_MOUNT_PATH ]
    then
        echo 'Router already mounted'
        return
    fi
    mkdir $ROUTER_MOUNT_PATH
    sudo mount -t nfs -o resvport,rw $ROUTER_IP_ADDRESS:/mnt/sda1 $ROUTER_MOUNT_PATH
}

function umountrouter {
    if [ -e $ROUTER_MOUNT_PATH ]
    then
        sudo umount $ROUTER_MOUNT_PATH
    fi
    rmdir $ROUTER_MOUNT_PATH
}

# Pcduino NFS
PCDUINO_IP_ADDRESS=192.168.1.97
PCDUINO_MOUNT_PATH=$HOME/pcduino
function mountpcduino {
    if [ -e $PCDUINO_MOUNT_PATH ]
    then
        echo 'Pcduino already mounted'
        return
    fi
    mkdir $PCDUINO_MOUNT_PATH
    sudo mount -t nfs -o resvport,rw $PCDUINO_IP_ADDRESS:/home/zyj/hdd/samba $PCDUINO_MOUNT_PATH
}

function umountpcduino {
    if [ -e $PCDUINO_MOUNT_PATH ]
    then
        sudo umount $PCDUINO_MOUNT_PATH
    fi
    rmdir $PCDUINO_MOUNT_PATH
}

# man
man() {
    env LESS_TERMCAP_mb=$'\E[01;31m' \
    LESS_TERMCAP_md=$'\E[01;38;5;74m' \
    LESS_TERMCAP_me=$'\E[0m' \
    LESS_TERMCAP_se=$'\E[0m' \
    LESS_TERMCAP_so=$'\E[38;5;160m' \
    LESS_TERMCAP_ue=$'\E[0m' \
    LESS_TERMCAP_us=$'\E[04;38;5;146m' \
    man "$@"
}

rmdsstore() {
    find . -name .DS_Store -exec rm -v {} \;
}

# translate man help page to pdf format
if [ `uname -s` = 'Darwin' ]
then
    function man2pdf {
        man -t $1 | open -f -a /Applications/Preview.app
    }
fi

# src_count
function src_count {
    type=$1
    total=0
    for x in `find ./* -type f -name "*.$type"`;
    do
        single=`cat $x|wc -l`
        total=$total+$single
    done

    echo $total|bc
}
